// <auto-generated />
using DeepOrangeWebApi.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeepOrangeWebApi.Migrations
{
    [DbContext(typeof(DbContextApp))]
    partial class DbContextAppModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DirectionId"));

                    b.Property<string>("DirectionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DirectionId");

                    b.ToTable("Directions");

                    b.HasData(
                        new
                        {
                            DirectionId = 1,
                            DirectionName = "PHP"
                        },
                        new
                        {
                            DirectionId = 2,
                            DirectionName = "Python"
                        });
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            LastName = "Honcharov",
                            Name = "Mykyta"
                        });
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TechnologyId"));

                    b.Property<int>("DirectionId")
                        .HasColumnType("integer");

                    b.Property<string>("TechnologyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TechnologyId");

                    b.HasIndex("DirectionId");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            DirectionId = 1,
                            TechnologyName = "Magento"
                        },
                        new
                        {
                            TechnologyId = 2,
                            DirectionId = 2,
                            TechnologyName = "Flask"
                        },
                        new
                        {
                            TechnologyId = 3,
                            DirectionId = 2,
                            TechnologyName = "NumPy"
                        });
                });

            modelBuilder.Entity("EmployeeTechnology", b =>
                {
                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("TechnologiesTechnologyId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeesEmployeeId", "TechnologiesTechnologyId");

                    b.HasIndex("TechnologiesTechnologyId");

                    b.ToTable("EmployeeTechnologies", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeesEmployeeId = 1,
                            TechnologiesTechnologyId = 1
                        },
                        new
                        {
                            EmployeesEmployeeId = 1,
                            TechnologiesTechnologyId = 2
                        },
                        new
                        {
                            EmployeesEmployeeId = 1,
                            TechnologiesTechnologyId = 3
                        });
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Technology", b =>
                {
                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Direction", "Direction")
                        .WithMany("Technologies")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("EmployeeTechnology", b =>
                {
                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Technology", null)
                        .WithMany()
                        .HasForeignKey("TechnologiesTechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Direction", b =>
                {
                    b.Navigation("Technologies");
                });
#pragma warning restore 612, 618
        }
    }
}
