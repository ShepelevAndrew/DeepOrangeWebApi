// <auto-generated />
using DeepOrangeWebApi.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeepOrangeWebApi.Migrations
{
    [DbContext(typeof(DbContextApp))]
    [Migration("20230514162954_EmployeeToProfile")]
    partial class EmployeeToProfile
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DirectionId"));

                    b.Property<string>("DirectionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DirectionId");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TechnologyId"));

                    b.Property<int>("DirectionId")
                        .HasColumnType("integer");

                    b.Property<string>("TechnologyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TechnologyId");

                    b.HasIndex("DirectionId");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("ProfileTechnology", b =>
                {
                    b.Property<int>("ProfilesProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("TechnologiesTechnologyId")
                        .HasColumnType("integer");

                    b.HasKey("ProfilesProfileId", "TechnologiesTechnologyId");

                    b.HasIndex("TechnologiesTechnologyId");

                    b.ToTable("ProfileTechnologies", (string)null);
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Technology", b =>
                {
                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Direction", "Direction")
                        .WithMany("Technologies")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("ProfileTechnology", b =>
                {
                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Profile", null)
                        .WithMany()
                        .HasForeignKey("ProfilesProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeepOrangeWebApi.DAL.Entities.Technology", null)
                        .WithMany()
                        .HasForeignKey("TechnologiesTechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeepOrangeWebApi.DAL.Entities.Direction", b =>
                {
                    b.Navigation("Technologies");
                });
#pragma warning restore 612, 618
        }
    }
}
